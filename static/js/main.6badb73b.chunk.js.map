{"version":3,"sources":["components/LayoutBlock.js","components/Coolors.js","components/Watch.js","components/PulseBG.js","App.js","serviceWorker.js","index.js","components/LayoutBlock.module.css","components/PulseBG.module.css"],"names":["dummyPage","text","dummyPageStyle","page","height","textAlign","display","flexDirection","alignItems","justifyContent","borderRight","margin","marginRight","padding","fontSize","fontWeight","verticalAlign","dummyContent","lineHeight","react_default","a","createElement","style","Layout","_ref","children","centered","rest","Object","objectWithoutProperties","assign","className","styles","default","ColorSchemes","Strap","width","overflow","backgroundColor","clr","Bezel","_ref2","borderRadius","Screen","_ref3","Face","_ref4","Value","_ref5","color","Watch","_ref6","colorScheme","time","_useState","useState","_useState2","slicedToArray","clrs","setClrs","useEffect","c","arr","tempVal","randomIndex","currentIndex","length","Math","floor","random","shuffle","Watch_Strap","Watch_Bezel","Watch_Screen","Watch_Face","Watch_Value","format","WatchEngine","_ref7","onColorChange","_useState3","moment","_useState4","setTime","_useState5","_useState6","setColorScheme","timer","setInterval","clearInterval","listOfColors","ind","newColors","parseInt","randomColor","Watch_Watch","PulseBG","bg","objectSpread","defaultProps","Index","bgClr","setBgClr","components_PulseBG","components_Watch","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","body"],"mappings":"+LAIMA,EAAY,SAAAC,GAChB,IAAMC,EAAiB,CACrBC,KAAM,CACJC,OAAQ,QACRC,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAGlBR,KAAM,CACJK,QAAS,eACTI,YAAa,6BACbC,OAAQ,EACRC,YAAa,GACbC,QAAS,mBACTC,SAAU,OACVC,WAAY,IACZC,cAAe,OAEjBC,aAAc,CACZX,QAAS,eACTD,UAAW,OACXa,WAAY,IACZd,OAAQ,GACRY,cAAe,WAGnB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,MAAOpB,EAAeC,MACzBgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAOpB,EAAeD,MAA1B,kCACAkB,EAAAC,EAAAC,cAAA,KAAGC,MAAOpB,EAAee,cAAehB,MAMjC,SAASsB,EAATC,GAAiD,IAA/BC,EAA+BD,EAA/BC,SAAUC,EAAqBF,EAArBE,SAAaC,EAAQC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,yBAC9D,OACEL,EAAAC,EAAAC,cAAA,MAAAO,OAAAE,OAAA,CAAKC,UAAWL,EAAWM,IAAON,SAAWM,IAAOC,SAAaN,GAC9DF,GAAYzB,EAAU,6CC1BhBkC,EAAe,CAC1B,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,YCpBzCC,EAAQ,SAAAX,GAAuB,IAApBC,EAAoBD,EAApBC,SAETH,EAAQ,CACZhB,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZJ,OAAQ,IACRgC,MANiB,GAQjBC,SAAU,UACVC,gBAViCd,EAAVe,KAUC,aAG1B,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAQG,IAGvBe,EAAQ,SAAAC,GAAuB,IAApBhB,EAAoBgB,EAApBhB,SACTH,EAAQ,CACZT,QAAS,EACT6B,aAAc,GACdJ,gBAJiCG,EAAVF,KAIC,UAE1B,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAQG,IAGvBkB,EAAS,SAAAC,GAAuB,IAApBnB,EAAoBmB,EAApBnB,SACVH,EAAQ,CACZT,QAAS,EACTyB,gBAHkCM,EAAVL,KAGA,cAE1B,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAQG,IAGvBoB,EAAO,SAAAC,GAAuB,IAApBrB,EAAoBqB,EAApBrB,SACRH,EAAQ,CACZgB,gBAFgCQ,EAAVP,KAEE,QACxB1B,QAAS,IAEX,OAAOM,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAQG,IAGvBsB,EAAQ,SAAAC,GAAuB,IAApBvB,EAAoBuB,EAApBvB,SACTH,EAAQ,CACZR,SAAU,GACVmC,MAHiCD,EAAVT,KAGT,SAEhB,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAQG,IAGvByB,EAAQ,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KAAWC,EAkBfC,mBAASH,GAlBMI,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAkBhCI,EAlBgCF,EAAA,GAkB1BG,EAlB0BH,EAAA,GAwBvC,OALAI,oBAAU,WACR,IAAMC,EAlBQ,SAAAC,GAId,IAHA,IACIC,EAASC,EADTC,EAAeH,EAAII,OAGhB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAUD,EAFVG,GAAgB,GAGhBH,EAAIG,GAAgBH,EAAIE,GACxBF,EAAIE,GAAeD,EAGrB,OAAOD,EAKGQ,CAAQlB,GAClBO,EAAQE,IACP,CAACR,IAGFlC,EAAAC,EAAAC,cAACkD,EAAD,CAAOhC,IAAKmB,EAAK,IACfvC,EAAAC,EAAAC,cAACmD,EAAD,CAAOjC,IAAKmB,EAAK,IACfvC,EAAAC,EAAAC,cAACoD,EAAD,CAAQlC,IAAKmB,EAAK,IAChBvC,EAAAC,EAAAC,cAACqD,EAAD,CAAMnC,IAAKmB,EAAK,IACdvC,EAAAC,EAAAC,cAACsD,EAAD,CAAOpC,IAAKmB,EAAK,IAAKL,EAAKuB,OAAO,OAClCzD,EAAAC,EAAAC,cAACsD,EAAD,CAAOpC,IAAKmB,EAAK,IAAKL,EAAKuB,OAAO,YAsC/BC,EA9BK,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,cAAoBC,EACjBzB,mBAAS0B,OADQC,EAAAtD,OAAA6B,EAAA,EAAA7B,CAAAoD,EAAA,GAClC3B,EADkC6B,EAAA,GAC5BC,EAD4BD,EAAA,GAAAE,EAEH7B,mBAASrB,EAAa,IAFnBmD,EAAAzD,OAAA6B,EAAA,EAAA7B,CAAAwD,EAAA,GAElChC,EAFkCiC,EAAA,GAErBC,EAFqBD,EAAA,GA2BzC,OAvBAzB,oBAAU,WACR,IAAI2B,EAAQC,YAAY,WACtBL,EAAQF,QAGP,KACH,OAAO,kBAAMQ,cAAcF,KAC1B,IAEH3B,oBAAU,YACY,SAAA8B,GAClB,IAAMC,EAAMxB,KAAKE,SAAWqB,EAAaxB,OACnC0B,EAAYF,EAAaG,SAASF,EAAK,KAGzCZ,GAAeA,EAAca,GACjCN,EAAeM,GAIjBE,CAAY5D,IACX,CAACmB,IAEGlC,EAAAC,EAAAC,cAAC0E,EAAD,CAAO3C,YAAaA,EAAaC,KAAMA,4BCrH1C2C,EAAU,SAAAxE,GAAgC,IAA7BC,EAA6BD,EAA7BC,SAAUH,EAAmBE,EAAnBF,MAAO2B,EAAYzB,EAAZyB,MAAYK,EAiBtBC,mBAAS,SAjBaC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAiBvCI,EAjBuCF,EAAA,GAiBjCG,EAjBiCH,EAAA,GAkB9CI,oBAAU,WACR,GAAIX,EAAO,CACT,IAAMY,EAnBM,SAAAC,GAId,IAHA,IACIC,EAASC,EADTC,EAAeH,EAAII,OAGhB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAUD,EAFVG,GAAgB,GAGhBH,EAAIG,GAAgBH,EAAIE,GACxBF,EAAIE,GAAeD,EAGrB,OAAOD,EAMKQ,CAAQrB,GAClBU,EAAQE,KAET,CAACZ,IAvB0C,IAAA+B,EAyBtBzB,mBAAS,IAzBa2B,EAAAtD,OAAA6B,EAAA,EAAA7B,CAAAoD,EAAA,GAAAE,EAAA,GAAAA,EAAA,GA2B9C,OACE/D,EAAAC,EAAAC,cAAA,OACEU,UAAWC,IAAOiE,GAClB3E,MAAKM,OAAAsE,EAAA,EAAAtE,CAAA,GAAON,EAAP,CAAcgB,gBAAiBoB,EAAK,IAAM,eAE9CjC,IAMPuE,EAAQG,aAAe,CACrB7E,MAAO,CACLlB,OAAQ,QAIG4F,QC7BAI,EAZD,WAAM,IAAA9C,EACQC,qBADRC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GACX+C,EADW7C,EAAA,GACJ8C,EADI9C,EAAA,GAGlB,OACErC,EAAAC,EAAAC,cAACE,EAAD,CAAQG,UAAQ,GACdP,EAAAC,EAAAC,cAACkF,EAAD,CAAItD,MAAOoD,GACTlF,EAAAC,EAAAC,cAACmF,EAAD,CAAOzB,cAAeuB,OCDVG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBC,EAAAC,QAAA,CAAkBC,KAAA,0BAAA1F,QAAA,qDAAAP,SAAA,0ECAlB+F,EAAAC,QAAA,CAAkBzB,GAAA","file":"static/js/main.6badb73b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport styles from \"./LayoutBlock.module.css\";\n\nconst dummyPage = text => {\n  const dummyPageStyle = {\n    page: {\n      height: \"100vh\",\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n\n    text: {\n      display: \"inline-block\",\n      borderRight: \"1px solid rgba(0, 0, 0,.3)\",\n      margin: 0,\n      marginRight: 20,\n      padding: \"10px 23px 10px 0\",\n      fontSize: \"24px\",\n      fontWeight: 500,\n      verticalAlign: \"top\"\n    },\n    dummyContent: {\n      display: \"inline-block\",\n      textAlign: \"left\",\n      lineHeight: 2.5,\n      height: 49,\n      verticalAlign: \"middle\"\n    }\n  };\n  return (\n    <div style={dummyPageStyle.page}>\n      <div>\n        <h1 style={dummyPageStyle.text}>here is where a page should be</h1>\n        <p style={dummyPageStyle.dummyContent}>{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default function Layout({ children, centered, ...rest }) {\n  return (\n    <div className={centered ? styles.centered : styles.default} {...rest}>\n      {children || dummyPage(\"there is no content.\")}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nconst Coolors = () => {\n  // involves calling my API to scrape coolors/app\n\n  let result;\n  fetch(\"http\")\n    .then(v => {\n      result = v;\n    })\n    .catch(e => {\n      console.log(\"error\");\n      console.log(e);\n    });\n\n  return <p>{result}</p>;\n};\n\nexport default Coolors;\n\nexport const ColorSchemes = [\n  [\"#44af69\", \"#f8333c\", \"#fcab10\", \"#2b9eb3\", \"#dbd5b5\"],\n  [\"#4c6085\", \"#39a0ed\", \"#36f1cd\", \"#13c4a3\", \"#32322c\"],\n  [\"#ffffff\", \"#ffe8d1\", \"#568ea3\", \"#68c3d4\", \"#826251\"],\n  [\"#d33f49\", \"#d7c0d0\", \"#eff0d1\", \"#77ba99\", \"#262730\"],\n  [\"#0b3954\", \"#bfd7ea\", \"#ff6663\", \"#e0ff4f\", \"#fefffe\"],\n  [\"#6b2d5c\", \"#f0386b\", \"#ff5376\", \"#f8c0c8\", \"#e2c290\"],\n  [\"#3f7cac\", \"#95afba\", \"#bdc4a7\", \"#d5e1a3\", \"#e2f89c\"]\n];\n","// ref: https://codeburst.io/reacts-render-props-technique-in-3-minutes-462862bf462e\n\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nimport { ColorSchemes } from \"./Coolors\";\n\nconst Strap = ({ children, clr }) => {\n  const strapWidth = 45;\n  const style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 300,\n    width: strapWidth,\n\n    overflow: \"visible\",\n    backgroundColor: clr || \"lightgrey\"\n  };\n\n  return <div style={style}>{children}</div>;\n};\n\nconst Bezel = ({ children, clr }) => {\n  const style = {\n    padding: 8,\n    borderRadius: 10,\n    backgroundColor: clr || \"salmon\"\n  };\n  return <div style={style}>{children}</div>;\n};\n\nconst Screen = ({ children, clr }) => {\n  const style = {\n    padding: 1,\n    backgroundColor: clr || \"whitesmoke\"\n  };\n  return <div style={style}>{children}</div>;\n};\n\nconst Face = ({ children, clr }) => {\n  const style = {\n    backgroundColor: clr || \"black\",\n    padding: 10\n  };\n  return <div style={style}>{children}</div>;\n};\n\nconst Value = ({ children, clr }) => {\n  const style = {\n    fontSize: 20,\n    color: clr || \"white\"\n  };\n  return <div style={style}>{children}</div>;\n};\n\nconst Watch = ({ colorScheme, time }) => {\n  // random assignment of 5 colors\n  const shuffle = arr => {\n    let currentIndex = arr.length;\n    let tempVal, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      tempVal = arr[currentIndex];\n      arr[currentIndex] = arr[randomIndex];\n      arr[randomIndex] = tempVal;\n    }\n\n    return arr;\n  };\n\n  const [clrs, setClrs] = useState(colorScheme);\n  useEffect(() => {\n    const c = shuffle(colorScheme);\n    setClrs(c);\n  }, [time]);\n\n  return (\n    <Strap clr={clrs[0]}>\n      <Bezel clr={clrs[1]}>\n        <Screen clr={clrs[2]}>\n          <Face clr={clrs[3]}>\n            <Value clr={clrs[4]}>{time.format(\"HH\")}</Value>\n            <Value clr={clrs[4]}>{time.format(\"mm\")}</Value>\n          </Face>\n        </Screen>\n      </Bezel>\n    </Strap>\n  );\n};\n\nconst WatchEngine = ({ onColorChange }) => {\n  const [time, setTime] = useState(moment());\n  const [colorScheme, setColorScheme] = useState(ColorSchemes[0]);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTime(moment());\n      // this doesn't rely on anything outside the function,\n      // no deps needed on useEffect\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    const randomColor = listOfColors => {\n      const ind = Math.random() * listOfColors.length;\n      const newColors = listOfColors[parseInt(ind, 10)];\n\n      // send color set up to parent\n      if (onColorChange) onColorChange(newColors);\n      setColorScheme(newColors);\n    };\n\n    // if date changes, change color set\n    randomColor(ColorSchemes);\n  }, [time]);\n\n  return <Watch colorScheme={colorScheme} time={time} />;\n};\n\nexport default WatchEngine;\n","import React, { useState, useEffect } from \"react\";\n\nimport styles from \"./PulseBG.module.css\";\n\nconst PulseBG = ({ children, style, color }) => {\n  const shuffle = arr => {\n    let currentIndex = arr.length;\n    let tempVal, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      tempVal = arr[currentIndex];\n      arr[currentIndex] = arr[randomIndex];\n      arr[randomIndex] = tempVal;\n    }\n\n    return arr;\n  };\n\n  const [clrs, setClrs] = useState(\"white\");\n  useEffect(() => {\n    if (color) {\n      const c = shuffle(color);\n      setClrs(c);\n    }\n  }, [color]);\n\n  const [tick, setTick] = useState(\"\"); //TODO: wave propogation\n\n  return (\n    <div\n      className={styles.bg}\n      style={{ ...style, backgroundColor: clrs[0] || \"lightcyan\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\n// gib it default properties\nPulseBG.defaultProps = {\n  style: {\n    height: \"100\"\n  }\n};\n\nexport default PulseBG;\n","import React, { useState } from \"react\";\n\n// components\nimport Layout from \"./components/LayoutBlock\";\nimport Watch from \"./components/Watch\";\nimport BG from \"./components/PulseBG\";\n\nconst Index = () => {\n  const [bgClr, setBgClr] = useState();\n\n  return (\n    <Layout centered>\n      <BG color={bgClr}>\n        <Watch onColorChange={setBgClr} />\n      </BG>\n    </Layout>\n  );\n};\n\nexport default Index;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"LayoutBlock_body__lDKa5\",\"default\":\"LayoutBlock_default__BO6dY LayoutBlock_body__lDKa5\",\"centered\":\"LayoutBlock_centered__3iD-0 LayoutBlock_body__lDKa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"PulseBG_bg__3ecXx\"};"],"sourceRoot":""}